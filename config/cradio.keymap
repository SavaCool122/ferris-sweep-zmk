// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 1>;
            then-layer = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R          &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F          &kp G        &kp H      &kp J  &kp K      &kp L    &kp SQT
&kp Z  &kp X  &kp C  &kp V          &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &kp BACKSPACE  &kp ENTER    &kp SPACE  &to 1
            >;
        };

        symbol {
            bindings = <
&kp TAB     &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp ESCAPE  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&kp CAPS    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &to 3
                                &to 0     &kp ENTER    &kp SPACE  &to 2
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &to 3
                        &trans  &trans    &trans  &trans
            >;
        };

        tech {
            bindings = <
&trans  &trans  &trans  &trans  &bt BT_SEL 0    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_SEL 1    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_CLR      &trans  &trans  &trans  &trans  &trans
                        &to 0   &trans          &trans  &to 1
            >;
        };
    };
};
