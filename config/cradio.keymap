// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 2>;
            then-layer = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q       &kp W           &kp E        &kp R             &kp T        &kp Y      &kp U             &kp I        &kp O           &kp P
&ht LCMD A  &ht LEFT_ALT S  &ht LCTRL D  &ht LEFT_SHIFT F  &kp G        &kp H      &ht LEFT_SHIFT J  &ht LCTRL K  &ht LEFT_ALT L  &ht LCMD SQT
&kp Z       &kp X           &kp C        &kp V             &kp B        &kp N      &kp M             &kp COMMA    &kp DOT         &kp FSLH
                                         &kp BACKSPACE     &kp ENTER    &kp SPACE  &to 1
            >;
        };

        sym {
            bindings = <
&kp TAB       &kp AT_SIGN         &kp HASH                    &kp DOLLAR                        &kp PERCENT    &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp EXCLAMATION   &kp PIPE
&ht LGUI ESC  &ht LEFT_ALT MINUS  &ht LCTRL LEFT_PARENTHESIS  &ht LEFT_SHIFT RIGHT_PARENTHESIS  &kp PLUS       &none      &kp LSHFT         &ht LCTRL EQUAL    &ht LEFT_ALT SQT  &kp LGUI
&kp CAPS      &none               &kp LEFT_BRACE              &kp RIGHT_BRACE                   &kp TILDE      &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none             &to 3
                                                              &to 0                             &kp ENTER      &kp SPACE  &to 2
            >;
        };

        num {
            bindings = <
&kp N1            &kp N2        &kp N3          &kp N4                &kp N5       &kp N6     &kp N7               &kp N8        &kp N9        &kp N0
&kp LEFT_COMMAND  &kp LEFT_ALT  &ht LCTRL LEFT  &ht LEFT_SHIFT RIGHT  &trans       &trans     &ht LEFT_SHIFT DOWN  &ht LCTRL UP  &kp LEFT_ALT  &kp LGUI
&trans            &trans        &trans          &trans                &trans       &trans     &trans               &trans        &trans        &to 3
                                                &to 0                 &kp ENTER    &kp SPACE  &to 1
            >;
        };

        tech {
            bindings = <
&trans  &trans  &trans  &trans  &bt BT_SEL 0    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_SEL 1    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_CLR      &trans  &trans  &trans  &trans  &trans
                        &to 0   &trans          &trans  &to 1
            >;
        };
    };
};
